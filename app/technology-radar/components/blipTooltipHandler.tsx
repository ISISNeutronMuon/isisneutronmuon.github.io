// Thin-client component that attaches event handlers on the client side
// It assumes the HTML has been generated by the parent component
"use client"

import { useEffect } from 'react';

type Params = {
  targetId: string,
  tooltipId: string
};

// Handler generator to set the display style of the target element
function displayStyleSetter(id: string, displayStyle: string) {
  return () => {
    const el = document.getElementById(id);
    if (el)
      el.style['display'] = displayStyle;
  }
}


// Generate a tooltip element and add event handlers to show/hide on mouse events
export default function BlipTooltipHandler({ targetId, tooltipId }: Params) {
  useEffect(() => {
    const el = document.getElementById(targetId) as HTMLElement;
    const showTooltipCb = displayStyleSetter(tooltipId, "block")
    const hideTooltipCb = displayStyleSetter(tooltipId, "none")
    el.addEventListener('mouseenter', showTooltipCb);
    el.addEventListener('mouseleave', hideTooltipCb);

    return () => {
      el.removeEventListener('mouseenter', showTooltipCb);
      el.removeEventListener('mouseleave', hideTooltipCb);
    };
  }, [targetId, tooltipId]);

  return (<></>)
}
